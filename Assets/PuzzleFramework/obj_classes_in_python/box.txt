class Box:
	def __init__(self):
		self.x = 0.0
		self.y = 0.0
		self.moving_right = False
		self.moving_left = False
		self.distance = 100
		self.action_called = False
		self.charge_level = 100
		self._init_charge = 100
		self._drain_amount = 10

		# IMPORTANT NOTE:
		# All action methods must be included in the actions list below.
		# The parsing function uses this list to add the pause commands 
		# to the player's code.
		# FORMAT: ".method_name("

		self.actions = [".move_right(", ".move_left("]

	def update_pos(self, new_x, new_y):
		self.x = new_x * 100
		self.y = new_y * 100

	def get_x(self):
		return self.x

	def get_y(self):
		return self.y

	def _reset(self):
		self.charge_level = self._init_charge
		self.moving_right = False
		self.moving_left = False
		self.action_called = False

	def _set_init_energy(self, init_energy):
		self.charge_level = init_energy
		self._init_charge = init_energy

	def clear_move(self):
		self.moving_right = False
		self.moving_left = False
		self.action_called = False

	def move_right(self):
		self.moving_right = True
		self.action_called = True

	def move_left(self):
		self.moving_left = True
		self.action_called = True

	def _drain(self):
		self.charge_level -= self._drain_amount

	def __str__(self):
		return "box_object(" + string(self.x) + ", " + string(self.y) + ")"

object = Box()