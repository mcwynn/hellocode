class Capacitor:
	def __init__(self):
		self.x = 0.0
		self.y = 0.0

		self.action_called = False
		self.power_supply = 100
		self._not_enough_power = False

		# IMPORTANT NOTE:
		# All action methods must be included in the actions list below.
		# The parsing function uses this list to add the pause commands 
		# to the player's code.
		# FORMAT: ".method_name("

		self.actions = []

	def update_pos(self, new_x, new_y):
		self.x = new_x * 100
		self.y = new_y * 100

	def get_x(self):
		return self.x

	def get_y(self):
		return self.y

	def _clear(self):
		self._not_enough_power = False

	def _reset(self):
		self._not_enough_power = False
		self.power_supply = 100
		self.action_called = False

	def _set_init_energy(self, init_energy):
		self.power_supply = init_energy

	def clear_move(self):
		pass

	def move_right(self):
		self.moving_right = True
		self.action_called = True

	def move_left(self):
		self.moving_left = True
		self.action_called = True

	def charge(self, obj_to_charge, charge_amount):
		if self.power_supply >= charge_amount:
			self.power_supply -= charge_amount

			if obj_to_charge.charge_level + charge_amount > 100:
				obj_to_charge.charge_level = 100
			else:
				obj_to_charge.charge_level += charge_amount
		else:
			self._not_enough_power = True

object = Capacitor()